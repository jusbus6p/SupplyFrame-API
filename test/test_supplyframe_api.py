# coding: utf-8

"""
    Supplyframe API

    <h2>Supplyframe API Gateway</h2>  Collection of Supplyframe endpoints exposed through the Supplyframe API Gateway.  <h3>Authorization</h3>  All requests should be authorized with parameter \"token\" set to value provided by Supplyframe. In addition to \"token,\" for routes that are intended to be used by end-user applications, parameter \"uuid\" is required. \"uuid\" should represent a unique identifier of the end-user. It can be generated as a random string that's unique for the duration of the user session, and should not contain any PII information.  <h3>Response</h3>  Response is a JSON object. Response should not be consumed if the status code has a value other than 200.  <h3>Status codes returned by API</h3>  <table>     <tr>         <td>200</td>         <td>valid response, consume body</td>     </tr>     <tr>         <td>400</td>         <td>bad request</td>     </tr>     <tr>         <td>401</td>         <td>unauthorized request</td>     </tr>     <tr>         <td>404</td>         <td>route does not exist</td>     </tr>     <tr>         <td>429</td>         <td>too many requests. Rate limiting is based on token and uuid provided</td>     </tr>     <tr>         <td>500</td>         <td>internal server error</td>     </tr> </table>  <h3>Versioning</h3>  API is versioned. Each route has it's own version counting. For each change in API response, new parameter supported, fields added or removed new version will be released.   # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.misc_api import SupplyFrameApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSupplyFrameApi(unittest.TestCase):
    """SupplyFrameApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.misc_api.SupplyFrameApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_documentationv1postman(self):
        """Test case for documentationv1postman

        /documentation/v1/postman  # noqa: E501
        """
        pass

    def test_normalizationv1manufacturer(self):
        """Test case for normalizationv1manufacturer

        /normalization/v1/manufacturer  # noqa: E501
        """
        pass

    def test_parametricv1query(self):
        """Test case for parametricv1query

        /parametric/v1/query  # noqa: E501
        """
        pass

    def test_parametricv1schemaquery(self):
        """Test case for parametricv1schemaquery

        /parametric/v1/schema/query  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
